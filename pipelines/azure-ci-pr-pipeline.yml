name: $(solutionName) $(major).$(minor).$(revision).$(build)
trigger: none
pool:
  #vmImage: ubuntu-latest
  name: Default
  demands: 
  - agent.name -equals VS2022
variables:
- template: variable.yml  
- group: VariableGroupForAllRepositories
- group: TicketOnlineUI
steps:
  - task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
    displayName: 'Prepare analysis on SonarCloud'
    condition: and(or(eq(variables['Build.Reason'], 'PullRequest'), eq(variables['build.sourceBranch'], 'refs/heads/dev')), eq(variables['isSonarActive'],1)) 
    inputs:
      SonarCloud: 'sonar cloud'
      organization: 'edenred-tr'
      projectKey: edenred-tr_UI
      projectName: UI
      scannerMode: CLI
      configMode: manual
      cliProjectKey: edenred-tr_UI
      extraProperties: | 
        sonar.nodejs.executable=
        sonar.pullrequest.provider=Azure DevOps Services
        sonar.pullrequest.vsts.token.secured=$(sonarVstsToken)
        #sonar.tests=./src/appTest
        sonar.javascript.lcov.reportPaths=./coverage/lcov.info
        sonar.testExecutionReportPaths=./coverage/sonar-report.xml
  - task: Cache@2
    displayName: Cache
    condition: eq(variables['IsCacheActive'], 'true')
    inputs:
      key: '$(System.DefaultWorkingDirectory)/yarn.lock'
      path: '$(System.DefaultWorkingDirectory)/node_modules'
      cacheHitVar: CacheRestored
  - script: |
      yarn install
    displayName: 'yarn install'
    condition: ne(variables['CacheRestored'], 'true')
  - script: |
      yarn test-sonar
    displayName: 'run tests'
  - task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
    displayName: 'Run Code Analysis'
    condition: and(or(eq(variables['Build.Reason'], 'PullRequest'), eq(variables['build.sourceBranch'], 'refs/heads/dev')), eq(variables['isSonarActive'],1)) 
  - task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
    displayName: 'Publish Quality Gate Result'
    condition: and(or(eq(variables['Build.Reason'], 'PullRequest'), eq(variables['build.sourceBranch'], 'refs/heads/dev')), eq(variables['isSonarActive'],1)) 